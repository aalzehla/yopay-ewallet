@model ewallet.shared.Models.Login.LoginCommon
@{
    ViewBag.Title = "Verify Code";
    Layout = "";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>@Html.Raw(ViewBag.Title ?? "Verification Code")</title>

    @Styles.Render("~/UI/DesignCss")
    @Scripts.Render("~/UI/CoreJs")
    @Scripts.Render("~/UI/AppJs")
    @Scripts.Render("~/UI/ThemeJs")
    @Styles.Render("~/Content/loginSheet.css")

    <style>
        element.style {
            overflow: hidden;
        }
    </style>
</head>
<body>
    <div class="container px-0">
        @{
            var submitAction = "";
            submitAction = "forgotpasswordverifycode";

        }

        @*<div class="row">
            <div class="col-md-12">*@
        @using (Html.BeginForm(submitAction, "home", new { }, FormMethod.Post, new { @role = "form", @id = "loginform" }))
        {
            <div>
                @Html.AntiForgeryToken()
                <h1>Forgot Password</h1>

                <span style="color:white" id="valid"> Check your Email for Verification Code </span><br />
                <span>Enter the Verification code</span>

                <br />
            </div>
            @Html.HiddenFor(m => m.UserName)

            <div class="col-md-4">
                @Html.TextBoxFor(m => m.ActivationCode, new { @placeholder = "Verification Code",@maxlength="6", @onkeypress = "return isNumber(event)"})
                @Html.ValidationMessageFor(m => m.ActivationCode, null, new { @class = "form-text text-danger" })
                
                <div class="form-group col-md-6 ml-auto mr-auto">
                    <input type="submit" name="next1" id="next1" class="success" value="Next" />
                </div>
            </div>
              

            
        }

        @*</div>
            </div>*@
    </div>

</body>
</html>
<script>
    //Number Only
    function isNumber(evt) {
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        return true;
    }
</script>