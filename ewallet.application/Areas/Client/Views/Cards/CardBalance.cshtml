@model ewallet.application.Models.CardModel

@{
    ViewBag.Title = "CardBalance";
    Layout = "~/Areas/Client/Views/Shared/_Layout.cshtml";
}

@{var BreadCum = ewallet.application.Library.ApplicationUtilities.GenerateBreadcum("Client/Cards", "Balance Retrieve/Add", ControllerDisplayName: "Cards");}
@section BreadCum{
    <style>
        .pull-right {
            float: right;
            margin-left: auto;
        }
    </style>
    @Html.Raw(BreadCum)
}



<div class="card">
    <div class="card-body">
        @using (Html.BeginForm("CardBalance", "Cards", new { }, FormMethod.Post, new { @role = "form", @id = "CardBalance" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            @Html.HiddenFor(Model => Model.Type)
            @Html.HiddenFor(Model => Model.CardId)
            string checke = "";
            if (string.IsNullOrEmpty(Model.Type) || Model.Type=="ad")
            {

                checke = "checked";
               
            }
            <fieldset class="mb-3">
                <div class="row">
                    <div class="col-md-6">
                        <div class="col-lg-12" style="padding-bottom: 10px">
                            @Html.LabelFor(model => model.Type, "Select Type", new { @class = "label", autocomplete = "off" })
                            <div class="form-check form-check-switchery form-check-switchery-double">
                                <label class="form-check-label">
                                    Retrieve
                                    <input type="checkbox" class="form-input-switchery" id="RTCheckbox" @Html.Raw(checke) data-fouc data-switchery="true" style="display: none;">
                                    Add
                                </label>
                            </div>
                        </div>
                        @Html.NDropDownListFor(model => model.CardType, new SelectList(Model.CardTypeList, "Value", "Text"), new { @class = "form-control", autocomplete = "off" }, 1)
                        @Html.NDropDownListFor(model => model.CardNo, Model.CardNoList, new { @class = "form-control", autocomplete = "off" }, 1)
                        @Html.NTextBoxFor(model => model.Amount, new { @class = "form-control", autocomplete = "off", @onkeypress = "return isNumberDot(event)", maxlength = "4" }, 1)
                    </div>
                    <div class="col-md-6">&nbsp;</div>
                </div>
                <div class="col-lg-12">
                    <button type="submit" class="btn btn-success btn-sm" id="btnSubmit">Add <i class="icon-floppy-disk ml-2"></i></button>
                    <a href="/Client/Cards/Index" class="btn btn-primary btn-sm ml-2" id="backbutton">Back  <i class="icon-backward ml-2"></i></a>
                </div>
            </fieldset>
        }
    </div>
</div>


<script>
    function isNumberDot(evt) {
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode != 46) {
            return false;
        }
        return true;
    }

    $('#RTCheckbox').change(function (e) {
        /*debugger*/;
        $('#Name').val('');
        if ($('#RTCheckbox').is(":checked")) {
            $('#Type').val('ad');
            $("#CardType").val('');
            $("#CardNo").val('');
            //$(".PurposedivClass").show();
            $("#btnSubmit").html("").append('<strong>Add<i class="icon-floppy-disk ml-2"></i></strong>');
        } else {
            //$(".PurposedivClass").hide();
            $("#CardType").val('');
            $("#CardNo").val('');
            $("#btnSubmit").html("").append('<strong>Retrieve<i class="icon-floppy-disk ml-2"></i></strong>');
            $('#Type').val('rb');
        }
    });

    //$('#btnSubmit').click(function (e) {
    //    if ($('#RTCheckbox').prop("checked") == false) {
    //        $('#Propose').rules('remove');
    //        $('#Propose-error').text('');
    //    }
    //});
    $(document).ready(function () {
        //$('#CardType option:eq(0)').attr('selected','selected');

        if ($('#RTCheckbox').is(":checked")) {
            $('#Type').val('ad');
            $("#btnSubmit").html("").append('<strong>Add<i class="icon-floppy-disk ml-2"></i></strong>');
        } else {
            $("#btnSubmit").html("").append('<strong>Retrieve<i class="icon-floppy-disk ml-2"></i></strong>');
            $('#Type').val('rb');
        }
        var cardType = $('#CardType').val();
        var cardNo = $('#CardNo').val();
        if (cardType != "" && cardNo == "") {
            //debugger;
            $("#CardNo").empty().prepend("<option value='' disabled selected>--Select Card Number--</option>");
            var cardType = $("#CardType").val();
            $.ajax({
                type: 'POST',
                async: true,
                url: '@Url.Action("GetCards")',
                dataType: 'json',
                data: { cardType: cardType },
                success: function (cards) {
                    $.each(cards, function (i, card) {
                        $("#CardNo").append('<option value="' + card.Value + '">' + card.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve Cards.' + ex);
                }
            });
            return false;
        }
    });
    //For CardNumber
    $("#CardType").change(function () {
        $("#CardNo").empty().prepend("<option value='' disabled selected>--Select Card Number--</option>");
        var cardType = $("#CardType").val();
        $.ajax({
            type: 'POST',
            async: true,
            url: '@Url.Action("GetCards")',
            dataType: 'json',
            data: { cardType: cardType },
            success: function (cards) {
                $.each(cards, function (i, card) {
                    $("#CardNo").append('<option value="' + card.Value + '">' + card.Text + '</option>');
                });
            },
            error: function (ex) {
                alert('Failed to retrieve Cards.' + ex);
            }
        });
        return false;
    });
    $('#btnSubmit').click(function (e) {
        var cardno = $("#CardNo").val();
        var amount = $("#Amount").val();
        var cardtype = $("#CardType").val();
        if (amount !="" && cardtype != ""&& cardno !="") {
            $("#btnSubmit").attr("disabled", true);
            $("#backbutton").attr("disabled", true);
        }
        document.getElementById("CardBalance").submit();
    });
</script>

