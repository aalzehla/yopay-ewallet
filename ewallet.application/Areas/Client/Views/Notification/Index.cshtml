@model List<ewallet.shared.Models.NotificationCommon>
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Client/Views/Shared/_Layout.cshtml";
}

<style>
    .notification-container {
        margin-left: 25px;
    }

    .notification-content {
        margin-bottom: 10px;
    }

    .single-notification-content {
        padding: 10px;
        padding-top: 20px;
        border-bottom: 1px #f2f2f2 solid;
    }

    .small-header {
        font-weight: 700;
        line-height: 1.28571429em;
        font-size: 1.07142857em;
        color: rgba(0,0,0,.87);
    }

        .small-header + p {
            margin-bottom: 5px !important;
            font-size: 0.9rem;
        }

        .small-header span {
            margin-left: 300px;
            font-weight: 400;
            display: block;
            /*background-color: #e9e9e9;*/
            cursor: pointer;
            border-radius: 5px !important;
            color: #333;
            text-align: center;
            vertical-align: middle;
            margin-top: -10px;
            background-color: #f8f4f4;
            width: 30px;
            padding: .3rem 0;
            float: right;
        }

            .small-header span:hover {
                background: #e9e9e9;
                border-color: #ddd;
                color: #333;
            }

            .small-header span a {
                color: black;
                position: relative /*.remove-notification*/;
                width: inherit;
                display: block;
                height: 100%;
            }

    .notification-date {
        font-weight: 500;
        padding-bottom: 10px;
        border-bottom: 1px solid #f2f2f2;
        margin-bottom: 0px !important;
    }

    .clear-all-notification {
        font-size: 14px;
        font-weight: normal;
        cursor: pointer;
    }
</style>
@{
    var totalGroup = Model.GroupBy(x => x.CreatedDate);

}
<div class="card">
    <div class="card-header">
        
        <div class="row">
            <div class="col-9">

                <h2>Notification</h2>
            </div>
            
            <div class="col-3">
                @{
                    if (Model.Count > 0)
                    {
                        <button class="btn btn-success" style="position: absolute; right: 0;"><span class="clear-all-notification">Clear All</span></button>
                    }

                }

                @*<input type="submit" class="clear-all-notification" value="Clear All" />*@
            </div>
        </div>


        <div class="row">
            <div class="col-md-12">
                @using (Html.BeginForm("Index", "Notification", new {}, FormMethod.Post, new {@id = "NotificationFilter", @role = "form"}))
                {


                    <div class="row">
                        <div class="col-md-4">
                            <input type="text" class="form-control" id="fromDate" name="fromdate" placeholder="From Date" autocomplete="off">
                        </div>

                        <div class="col-md-4">
                            <input type="text" class="form-control" id="toDate" name="todate" placeholder="To Date" autocomplete="off">
                        </div>
                        <div class="col-md-4">
                            <input type="submit" class="btn btn-success" id="btnSearch" name="txtSearch" value="Search"/>
                        </div>
                    </div>

                }
                <br/>
                <div>
                    <span class="alert" style="color: green; font: 100">
                        @(TempData["notificationmsg"] ?? string.Empty)
                    </span>
                </div>

            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="transaction-container">

            @foreach (var data in totalGroup)
            {
                DateTime oDate = Convert.ToDateTime(data.Key);
                <div class="row transaction-content">
                    <div class="col-md-12 ">
                        <div class="statement-date">
                            @Html.Raw(oDate.ToString("dddd")),
                            @Html.Raw(oDate.Day)
                            @Html.Raw(oDate.ToString("MMMM"))
                            @Html.Raw(oDate.Year)

                        </div>

                        @foreach (var item in Model.Where(x => x.CreatedDate == data.Key))
                        {
                            <div class="row single-transaction-content">
                                <div class="col">


                                    <div>
                                        <div class="small-header">@Html.Raw(item.Subject) <span><a href="#" id="@Html.Raw(item.Id)" class="remove-notification">x<br style="clear: both;" /></a></span></div>
                                        <p>@Html.Raw(item.Notification)</p>
                                    </div>
                                </div>
                            </div>


                        }
                    </div>
                </div>
            }

        </div>

    </div>
</div>

<script>



    $(function () {

        let yearRangeDOB = "1944:-10"; //"1944:+0";
        let yearRangeExpire = "1944:+10"; //"1944:+20";
        let minimum = "[1943, 04, 14]";
        let dateFormat = "yy-mm-dd";
        $("#fromDate").datepicker({
            dateFormat: dateFormat,
            maxDate: new Date,
            changeMonth: true,
            changeYear: true,
            autoSize: true
        }).attr('readonly', 'readonly');

        $("#toDate").datepicker({
            dateFormat: dateFormat,
            maxDate: new Date,
            changeMonth: true,
            changeYear: true,
            autoSize: true
        }).attr('readonly', 'readonly');
    });

</script>




