@model ewallet.application.Models.GatewayModel
@{
    ViewBag.Title = "Manage Gateway";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@{var BreadCum = ewallet.application.Library.ApplicationUtilities.GenerateBreadcum("Gateway", "Manage Gateway");}
@section BreadCum{
    <style>
        .pull-right {
            float: right;
            margin-left: auto;
        }
    </style>
    @Html.Raw(BreadCum)
}
<div class="card">
    <div class="card-header header-elements-inline">
        <legend class="card-title text-uppercase font-size-sm font-weight-bold">@Html.Raw(String.IsNullOrEmpty(Model.GatewayId) ? "Add New" : "Update") Gateway</legend>
    </div>
    <div class="card-body">
        @using (Html.BeginForm("ManageGateway", "Gateway", FormMethod.Post, new { @role = "form", @id = "addgateway", enctype = "multipart/form-data" }))
        {
            string check=null;
            if(Model.GatewayStatus=="Y")
            {
                check = "checked";
            }
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.GatewayId)
            @Html.HiddenFor(model => model.GatewayStatus)
            <fieldset>
                <div class="mb-3">
                    <div class="row">
                        @Html.NTextBoxFor(model => model.GatewayName, new { @class = "form-control", autocomplete = "off" }, 3)
                        @Html.NTextBoxFor(model => model.GatewayUsername, new { @class = "form-control", autocomplete = "off", @type = "password" }, 3)
                        @Html.NTextBoxFor(model => model.GatewayPwd, new { @class = "form-control", autocomplete = "off", @type = "password" }, 3)
                    </div>
                    <div class="row">

                        @Html.NTextBoxFor(model => model.GatewayURL, new { @class = "form-control", autocomplete = "off" }, 3)
                        @*  @Html.NTextBoxFor(model => model.GatewayType, new { @class = "form-control", autocomplete = "off" }, 3)*@
                        @Html.NDropDownListFor(model => model.GatewayType, Model.GatewayTypeList, new { @class = "form-control", autocomplete = "off" }, 3)


                        @*@Html.NTextBoxFor(model => model.IsDirectGateway, new { @class = "form-control", autocomplete = "off" }, 6)*@
                        @*@Html.NDropDownListFor(model => model.IsDirectGateway, Model.IsDirectGatewayList, new { @class = "form-control", autocomplete = "off" }, 6)*@

                        <div class="col-lg-4 ">
                            <br />
                            <div class="form-group mb-3 mb-md-2 " style="padding-top:10px">
                                @Html.Label("Direct Gateway", new { @class = " font-weight-semibold" }) &nbsp;&nbsp;
                                <label class="form-check-label">
                                    @Html.CheckBoxFor(model => model.IsDirectGateway, new { @name = "IsDirectGateway", @class = "form-check-input-styled" })
                                </label>
                            </div>
                            
                        </div>

                        
                    </div>

                        @*   @Html.NSwitchBoxFor(model => model.GatewayStatus, Model.GatewayStatus == "Y" ? true : false, "Y", 6)*@


                    </div>
                    <div class="row">
                        @Html.NTextBoxFor(model => model.GatewayAccessCode, new { @class = "form-control", autocomplete = "off", @type = "password" }, 3)
                        @Html.NTextBoxFor(model => model.GatewaySecurityCode, new { @class = "form-control", autocomplete = "off", @type = "password" }, 3)
                        @Html.NTextBoxFor(model => model.GatewayApitoken, new { @class = "form-control", autocomplete = "off", @type = "password" }, 3)
                    </div>
                    <div class="row">
                        @Html.NDropDownListFor(model => model.GatewayCountry, Model.GatewayCountryList, new { @class = "form-control", autocomplete = "off" }, 3)
                      @*  @Html.NDropDownListFor(model => model.GatewayCurrency, Model.GatewayCurrencyList, new { @class = "form-control", autocomplete = "off" }, 3)*@

                        @*@Html.NTextBoxFor(model => model.GatewayCountry, new { @class = "form-control", autocomplete = "off" }, 3)*@
                            @Html.NTextBoxFor(model => model.GatewayCurrency, new { @class = "form-control", autocomplete = "off" }, 3)
                        @if(!string.IsNullOrEmpty(Model.GatewayId))
                        {
                        @Html.NTextBoxFor(model => model.GatewayBalance, new { @class = "form-control", autocomplete = "off",@readonly="readonly" }, 3)
                        }
                    </div>
                    <div class="row">
                        <div class="col-lg-12" style="padding-bottom: 10px">
                            @Html.LabelFor(model => model.GatewayStatus, "Gateway status", new { @class = "label", autocomplete = "off" })
                            <br />
                            <div class="form-check form-check-switchery form-check-switchery-double">
                                <label class="form-check-label">
                                    Disable
                                    <input type="checkbox" class="form-input-switchery" data-fouc data-switchery="true" @Html.Raw(check) style="display: none;"  id="checkbox" />
                                    Enable
                                </label>
                            </div>
                        </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-12">
                                <button type="submit" class="btn btn-success btn-sm">Save <i class="icon-floppy-disk ml-2"></i></button>
                            </div>
                        </div>



            </fieldset>
        }

    </div>
</div>
<script>
   
     $('#checkbox').change(function (e) {
         
        if ($('#checkbox').is(":checked")) {
            $('#GatewayStatus').val('Y');
           
        } else {
            
            $('#GatewayStatus').val('N');
        }
    });
</script>