
@{
    ViewBag.Title = "Admin Dashboard";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<br />
<h2>Admin DashBoard</h2>
@Html.AntiForgeryToken()

<!-- Page content -->
<div class="page-content pt-0">

    <!-- Main content -->
    <div class="content-wrapper">

        <!-- Content area -->
        <div class="content">

            <div class="row">
                <div class="col">
                    <div class="card">
                        <div class="card-body">
                            <canvas id="myChart" width="400" height="150"></canvas>
                            <br />
                            <div>
                                <div class="chartjs-size-monitor"><div class="chartjs-size-monitor-expand"><div class=""></div></div><div class="chartjs-size-monitor-shrink"><div class=""></div></div></div>
                                <canvas id="canvas" style="display: block; height: 467px; width: 935px;" width="1402" height="700" class="chartjs-render-monitor"></canvas>
                            </div>
                        </div>
                    </div>

                </div>
            </div>

            



        </div>
        <!-- /content area -->

    </div>
    <!-- /main content -->

</div>
<!-- /page content -->
 
<script>
    var RequestVerificationToken = $('input[name="__RequestVerificationToken"]').val();
        $(document).ready(function () {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetChartData", "Home")',
                dataType: 'json',
                data: { '__RequestVerificationToken' : RequestVerificationToken},
                success: function (data) {
                    var chartDataLabel = [];
                    var chartData = [];
                    var targets = [];
                    var achievements = [];
                    var arr = data[0].ChartDataList;
                    var arr2 = data[2].ChartDataList;

                    arr.forEach(element => {
                        chartDataLabel.push(element.Label);
                        chartData.push(element.Value);

                    });

                    arr2.forEach(element => {
                        if (element.Type === "target") {
                            targets.push({ x: element.Label, y: element.Value ? parseInt(element.Value) : 0 });
                        }
                        else if (element.Type === "achievement") {
                            achievements.push({ x: element.Label, y: element.Value ? parseInt(element.Value) : 0  });
                        }
                        else {

                        }

                    });


                    getBarChart(chartDataLabel, chartData);
                    getLineChart(targets, achievements);

                },
                error: function (ex) {
                    /*debugger*/;
                }
            });
        });

    function getBarChart(label, data) {

        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: label,
                datasets: [{
                    label: label,
                    data: data,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        '#cccccc'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1,
                    barThickness: 60,
                    barPercentage: 1.0
                }]
            },
            options: {
                //title: {
                //    display: true,
                //    text: 'Custom Chart Title'
                //},
                legend: {
                    display: false,
                    
                },
                scales: {
                    xAxes: [{
                        
                        scaleLabel: {
                            display: true,
                            labelString: 'Products'
                        },
                        ticks: {
                            major: {
                                fontStyle: 'bold',
                                fontColor: '#FF0000'
                            }
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        },
                        scaleLabel: {
                            display: true,
                            labelString: 'No of Transactions'
                        }
                    }]
                }
            }
        });
    }

    function getLineChart(targets, achievements) {

        var ctx = document.getElementById('canvas').getContext('2d');

        
        var config = {
            type: 'line',
            data: {
                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
                datasets: [{
                    label: 'Targets',
                    borderColor: 'rgb(255, 99, 132)',
                    //backgroundColor: 'rgb(255, 99, 132)',
                    data: targets
                }, {
                        label: 'Achievements',
                    borderColor: 'rgb(54, 162, 235)',
                        //backgroundColor: 'rgb(54, 162, 235)',
                        data: achievements,
                }]
            },
            options: {
                responsive: true,
                //title: {
                //    display: true,
                //    text: 'Chart.js Line Chart - Stacked Area'
                //},
                tooltips: {
                    mode: 'index',
                },
                hover: {
                    mode: 'index'
                },
                scales: {
                    xAxes: [{
                        scaleLabel: {
                            display: true,
                            labelString: 'Month'
                        }
                    }],
                    yAxes: [{
                        scaleLabel: {
                            display: true,
                            labelString: 'Value'
                        }
                    }]
                }
            }
        };

        new Chart(ctx, config);

        
    }
    

    
</script>        

